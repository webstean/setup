# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
properties:
  configurationVersion: 0.2.0
  assertions:
    - resource: Microsoft.Windows.Developer/OsVersion
      directives:
        description: Verify min OS version requirement
        allowPrerelease: true
      settings:
        MinVersion: '10.0.22000'

  resources:
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: DesiredStateConfiguration
      directives:
        description: Install DesiredStateConfiguration
        allowPrerelease: false
        securityContext: elevated
      settings:
        id: 9NVTPZWRC6KQ
        source: msstore

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.Company.Portal
      directives:
        description: Install Microsoft.Company.Portal
        allowPrerelease: false
      settings:
        id: 9WZDNCRFJ3PZ
        source: msstore

#   - resource: PSDscResources/WindowsOptionalFeature
#    directives:
#      description: Install VirtualMachinePlatform
#      securityContext: elevated
#    settings:
#      name: VirtualMachinePlatform
#      ensure: Present

  ### Install WSL
#  - resource: xPSDesiredStateConfiguration/xWindowsFeature
#    directives:
#      description: Install WSL
#      securityContext: elevated
#    settings:
#      name: Microsoft-Windows-Subsystem-Linux
#      ensure: Present

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: installWSL
      directives:
        description: Ensure WSL is installed
        allowPrerelease: false
        securityContext: elevated
      settings:
        id: Microsoft.WSL
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Install.Ubuntu
      dependsOn:
        - installWSL
      directives:
        description: Install Ubuntu for WSL
        allowPrerelease: true
        securityContext: elevated
      settings:
        id:   Canonical.Ubuntu    
        source: winget

    - resource: xPSDesiredStateConfiguration/xScript
      id: variable.developer
      directives:
        description: Set a system-wide environment variable
      settings:
        GetScript: return $false
        TestScript: return $false
        SetScript: |
          [System.Environment]::SetEnvironmentVariable("DEVELOPER","Yes","Machine")

    - resource: xPSDesiredStateConfiguration/xScript
      id: Script.Set.User.Wallpaper
      description: Set Developer USER wallpaper
      settings:
        GetScript: return $false
        TestScript: return $false
        SetScript: |
          $wallpaper = "default-wallpaper.jpg"
          $regPath = "HKCU:\Control Panel\Desktop"
          $regName = "wallpaper"
          $location = "$env:ALLUSERSPROFILE"
          $wallpaperlocation = "${location}\${wallpaper}"
          if (Test-Path "$wallpaperlocation" ) {          
            Set-ItemProperty -Path $regPath -Name $regName -Value $wallpaperlocation
            rundll32.exe user32.dll, UpdatePerUserSystemParameters
            Write-Host "Set USER Wallpaper"
          }

    - resource: xPSDesiredStateConfiguration/xScript
      id: Script.Set.Logon.Wallpaper
      dependsOn:
        - Script.Set.User.Wallpaper
      description: Set Developer LOGON wallpaper
      settings:
        GetScript: return $false
        TestScript: return $false
        SetScript: |
          $wallpaper = "default-wallpaper.jpg"
          $regPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System"
          $regName = "wallpaper"
          $location = "$env:ALLUSERSPROFILE"
          $wallpaperlocation = "${location}\${wallpaper}"
          if (Test-Path "$wallpaperlocation" ) {          
            Set-ItemProperty -Path $regPath -Name $regName -Value $wallpaperlocation
            Write-Host "Set LOGON Wallpaper"
          }

    - resource: xPSDesiredStateConfiguration/xScript
      id: Script.Set.Lock.Wallpaper
      dependsOn:
        - Script.Set.User.Wallpaper
      description: Set Developer LOCK wallpaper
      settings:
        GetScript: return $false
        TestScript: return $false
        SetScript: |
          $wallpaper = "default-wallpaper.jpg"
          $regPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization"
          $regName = "wallpaper"
          $location = "$env:ALLUSERSPROFILE"
          $wallpaperlocation = "${location}\${wallpaper}"
          if (Test-Path "$wallpaperlocation" ) {          
            Set-ItemProperty -Path $regPath -Name $regName -Value $wallpaperlocation
            Write-Host "Set LOCK Wallpaper"
          }

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.VisualStudioCode
      directives:
        description: Installing Microsoft.VisualStudioCode
        allowPrerelease: false
        securityContext: current
      settings:
        id: Microsoft.VisualStudioCode
        source: winget
  
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.VisualStudioCode.Insiders
      directives:
        description: Install Visual Studio Code Insiders
        securityContext: current
      settings:
        id: Microsoft.VisualStudioCode.Insiders
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.DotNet.SDK.9
      directives:
        description: Installing Microsoft.DotNet.SDK.9
        allowPrerelease: true
        securityContext: current
      settings:
        id: Microsoft.DotNet.SDK.9
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.DotNet.SDK.Preview
      directives:
        description: Installing Microsoft.DotNet.SDK.Preview
        allowPrerelease: true
        securityContext: elevated
      settings:
        id: Microsoft.DotNet.SDK.Preview
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: GitHub.GitHubDesktop
      directives:
        description: Installing GitHub.GitHubDesktop
        allowPrerelease: false
        securityContext: current
      settings:
        id: GitHub.GitHubDesktop
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.AIShell
      directives:
        description: Install Microsoft.AIShell (aish)
        allowPrerelease: true
      settings:
        id: Microsoft.AIShell
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: SlackTechnologies.Slack
      directives:
        description: Install SlackTechnologies.Slack
        allowPrerelease: false
      settings:
        id: SlackTechnologies.Slack
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Anthropic.Claude
      directives:
        description: Install Anthropic.Claude
        allowPrerelease: true
      settings:
        id: Anthropic.Claude
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.Azure.AZCopy.10
      directives:
        description: Install Azure Az Copy Tool
        allowPrerelease: false
      settings:
        id: Microsoft.Azure.AZCopy.10
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: GnuWin32.UnZip
      directives:
        description: Install GnuWin32.UnZip
        allowPrerelease: false
      settings:
        id: GnuWin32.UnZip
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: RedHat.Podman
      dependsOn:
        - installWSL
      directives:
        description: Installing RedHat.Podman
        allowPrerelease: true
      settings:
        id: RedHat.Podman
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: RedHat.Podman-Desktop
      dependson:
        - RedHat.Podman
      directives:
        description: Installing RedHat.Podman-Desktop
        allowPrerelease: true
      settings:
        id: RedHat.Podman-Desktop
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Azure.VPN
      directives:
        description: Installing Azure VPN Client
        allowPrerelease: false
        securityContext: current
      settings:
        id: 9NP355QT2SQB
        source: msstore

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.Azd
      directives:
        description: Installing Microsoft.Azd
        allowPrerelease: false
        securityContext: current
      settings:
        id: Microsoft.Azd
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.Bicep
      directives:
        description: Installing Microsoft.Bicep
        allowPrerelease: false
        securityContext: current
      settings:
        id: Microsoft.Bicep
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Hashicorp.Terraform
      directives:
        description: Installing Hashicorp.Terraform
        allowPrerelease: false
        securityContext: current
      settings:
        id: Hashicorp.Terraform
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Romanitho.Winget-AutoUpdate
      directives:
        description: Installing Romanitho.Winget-AutoUpdate
        allowPrerelease: false
        securityContext: elevated
      settings:
        id: Romanitho.Winget-AutoUpdate
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Graphviz.Graphviz
      directives:
        description: Installing Graphviz.Graphviz
        allowPrerelease: false
        securityContext: current
      settings:
        id: Graphviz.Graphviz
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.AzureCLI
      directives:
        description: Installing Microsoft.AzureCLI
        allowPrerelease: false
        securityContext: current
      settings:
        id: Microsoft.AzureCLI
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.Azure.FunctionsCoreTools
      directives:
        description: Installing Microsoft.Azure.FunctionsCoreTools
        allowPrerelease: false
        securityContext: current
      settings:
        id: Microsoft.Azure.FunctionsCoreTools
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.Azure.StorageExplorer
      directives:
        description: Installing Microsoft.Azure.StorageExplorer
        allowPrerelease: false
        securityContext: current
      settings:
        id: Microsoft.Azure.StorageExplorer
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: SQLite.SQLite
      directives:
        description: Installing SQLite.SQLite
        allowPrerelease: false
        securityContext: current
      settings:
        id: SQLite.SQLite
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: CoralCreek.SQLiteExpert.Personal
      directives:
        description: Installing CoralCreek.SQLiteExpert.Personal
        allowPrerelease: false
        securityContext: current
      settings:
        id: CoralCreek.SQLiteExpert.Personal
        source: winget

#    - resource: Microsoft.WinGet.DSC/WinGetPackage
#      id: Oracle.SQLDeveloper
#      directives:
#        description: Installing Oracle.SQLDeveloper HUGE
#        allowPrerelease: false
#        securityContext: current
#      settings:
#        id: Oracle.SQLDeveloper
#        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Oracle.OCI-CLI
      directives:
        description: Installing Oracle.OCI-CLI
        allowPrerelease: false
        securityContext: current
      settings:
        id: Oracle.OCI-CLI
        source: winget

#    - resource: Microsoft.WinGet.DSC/WinGetPackage
#      id: Microsoft.SQLServerManagementStudio
#      directives:
#        description: Installing Microsoft.SQLServerManagementStudio
#        allowPrerelease: false
#        securityContext: current
#      settings:
#        id: Microsoft.SQLServerManagementStudio
#        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.WindowsTerminal
      directives:
        description: Installing Microsoft.WindowsTerminal
        allowPrerelease: false
        securityContext: current
      settings:
        id: Microsoft.WindowsTerminal
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Dapr.CLI
      directives:
        description: Installing Dapr.CLI
        allowPrerelease: false
        securityContext: current
      settings:
        id: Dapr.CLI
        source: winget

## Takes too long, not that useful
#     - resource: Microsoft.WinGet.DSC/WinGetPackage
#     id: WindowsADK
#     directives:
#       description: Installing Microsoft.WindowsADK
#       allowPrerelease: false
#       securityContext: current
#     settings:
#       id: Microsoft.WindowsADK
#       source: winget
 
#  - resource: Microsoft.WinGet.DSC/WinGetPackage
#    id: devproxy.devproxy
#    directives:
#      description: Installing devproxy.devproxy
#      allowPrerelease: false
#      securityContext: current
#    settings:
#      id: devproxy.devproxy
#      source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: LIGHTNINGUK.ImgBurn
      directives:
        description: Installing LIGHTNINGUK.ImgBurn
        allowPrerelease: false
        securityContext: current
      settings:
        id: LIGHTNINGUK.ImgBurn
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: JanDeDobbeleer.OhMyPosh
      directives:
        description: Installing JanDeDobbeleer.OhMyPosh
        allowPrerelease: false
        securityContext: current
      settings:
        id: JanDeDobbeleer.OhMyPosh
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Starship.Starship
      directives:
        description: Installing Starship.Starship
        allowPrerelease: false
        securityContext: current
      settings:
        id: Starship.Starship
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: jqlang.jq
      directives:
        description: Installing jqlang.jq
        allowPrerelease: false
        securityContext: current
      settings:
        id: jqlang.jq
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: RaspberryPiFoundation.RaspberryPiImager
      directives:
        description: Installing RaspberryPiFoundation.RaspberryPiImager
        allowPrerelease: false
        securityContext: current
      settings:
        id: RaspberryPiFoundation.RaspberryPiImager
        source: winget

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: zarunbal.LogExpert
      directives:
        description: Installing zarunbal.LogExpert
        ## C:\Users\vid9na6\AppData\Local\Microsoft\WinGet\Packages\zarunbal.LogExpert_Microsoft.Winget.Source_8wekyb3d8bbwe\logexpert.exe
        allowPrerelease: false
        securityContext: current
      settings:
        id: zarunbal.LogExpert
        source: winget

    - resource: Microsoft.Windows.Settings/WindowsSettings
      id: WindowsSettings1
      directives:
        description: Modify Windows settings
        allowPrerelease: true
      settings:
        AppColorMode: Dark
        DeveloperMode: true
        SystemColorMode: Dark
        TaskbarAlignment: Center

    - resource: Microsoft.Windows.Developer/WindowsExplorer
      id: WindowsExplorerSettings1
      directives:
        description: Modify Windows Explorer settings
        allowPrerelease: true
      settings:
        FileExtensions: Show # [KeepCurrentValue, Hide]
        HiddenFiles: Show # [KeepCurrentValue, Hide]
        ItemCheckBoxes: Show # [KeepCurrentValue, Hide]
        RestartExplorer: False # Use caution when setting `RestartExplorer: true` as this will force explorer to close. Required for all WindowsExplorer settings.

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.Edit
      directives:
        description: Modify Windows Explorer settings
        allowPrerelease: false
      settings:
        id: Microsoft.Edit
        source: winget

    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      id: vscode-esbenp.prettier-vscode
      dependsOn:
        - Microsoft.VisualStudioCode
      directives:
        description: Install Prettier for code formatting
        allowPrerelease: true
      settings:
        Name: esbenp.prettier-vscode

#  - resource: xPSDesiredStateConfiguration/xWindowsFeature  ## only works on Servers
#    id: WindowsSandbox
#    directives:
#      description: Ensure Windows Sandbox is enabled
#      allowPrerelease: true
#    settings:
#      Name: Containers-DisposableClientVM
#      Ensure: Present

#  - resource: Microsoft.WindowsSandbox.DSC/WindowsSandbox
#    id: WindowsSandboxConfig
#    dependsOn:
#      - WindowsSandbox
#    directives:
#      description: Create Windows Sandbox with Winget installed
#      allowPrerelease: true
#      securityContext: current
#    settings:
#      Ensure: Present
#      HostFolder: C:\Sandbox
#      SandboxFolder: C:\Sandbox
#      LogonCommand: >
#          cmd /c start powershell -NoExit -Command "$progressPreference = 'silentlyContinue';
#          Write-Host 'Setting execution policy to remote signed...' `n;
#          Set-ExecutionPolicy RemoteSigned -Force;
#          Write-Host "Installing WinGet PowerShell module from PSGallery...";
#          Install-PackageProvider -Name NuGet -Force | Out-Null;
#          Install-Module -Name Microsoft.WinGet.Client -Force -Repository PSGallery | Out-Null;
#          Write-Host "Using Repair-WinGetPackageManager cmdlet to bootstrap WinGet...";
#          Repair-WinGetPackageManager;
#          Write-Host "Done.";  

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.PowerToys
      directives:
        description: Install PowerToys
        securityContext: current
      settings:
        id: Microsoft.PowerToys
        source: winget

    - resource: PowerToysConfigure
      id: Microsoft.PowerToys.Configure
      dependson:
      - Microsoft.PowerToys
      directives:
        description: Configure PowerToys
      settings:
        ## https://learn.microsoft.com/en-us/windows/powertoys/dsc-configure
        GeneralSettings:
          Startup: true
          EnableWarningsElevatedApps: false
          AutoDownloadUpdates: true
          ShowWhatsNewAfterUpdates: false
          EnableExperimentation: true
          ShowNewUpdatesToastNotification: false
        ShortcutGuide:
          Enabled: false
          OverlayOpacity: 1
        FancyZones:
          Enabled: true
          FancyzonesEditorHotkey: "Shift+Ctrl+Alt+F"
        FindMyMouse:
          Enabled: true
        Awake:
          Enabled: false
        ColorPicker:
          Enabled: true
        EnvironmentVariables:
          Enabled: true
          LaunchAdministrator: false
        Hosts:
          Enabled: true
          ShowStartupWarning: false
        ImageResizer:
          Enabled: true
          ImageresizerReplace: true
        KeyboardManager:
          Enabled: false
        LightSwitch:
          Enabled: false
        MouseJump:
          Enabled: false
        #ScreenRuler:
        #  Enabled: false
        #TextExtractor:
        #  Enabled: true
       

#    - resource: GitDsc/GitClone
#      id: github.com/lscph1929/lscph-azterraform.git
#      directives:
#        description: Clone the lscph1929/lscph-azterraform private repository
#        allowPrerelease: true
#        securityContext: current
#      settings:
#        HttpsUrl: https://github.com/lscph1929/lscph-azterraform.git
#        RootDirectory: "C:/WorkSpaces"

#    - resource: GitDsc/GitClone
#      id: github.com/stomble/stm-cloud-scaffold.git
#      directives:
#        description: Clone the stomble/stm-cloud-scaffold private repository
#        allowPrerelease: true
#        securityContext: current
#      settings:
#        HttpsUrl: https://github.com/stomble/stm-cloud-scaffold.git
#        RootDirectory: "C:/WorkSpaces"

#    - resource: GitDsc/GitClone
#      id: github.com/lscph1929/scripts.git
#      directives:
#        description: Clone the lscph1929/scripts private repository
#        allowPrerelease: true
#        securityContext: current
#      settings:
#        HttpsUrl: https://github.com/lscph1929/scripts.git
#        RootDirectory: "C:/WorkSpaces"

    - resource: GitDsc/GitClone
      id: github.com/webstean/setup
      directives:
        description: Clone the webstean/scripts public repository
        allowPrerelease: true
        securityContext: current
      settings:
        HttpsUrl: https://github.com/webstean/setup
        RootDirectory: "C:/WorkSpaces"

#  - resource: Microsoft.VSCode.Dsc/VSCodeExtension
#    directives:
#      description: Install Git Graph for visual Git history
#      allowPrerelease: true
#    settings:
#      Name: mhutchie.git-graph

    # VS Code .NET Development Extensions
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      id: vscode-ms-dotnettools.csharp
      dependsOn:
        - Microsoft.VisualStudioCode
      directives:
        description: Install C#  (PreRelease) extension
        allowPrerelease: true
        securityContext: current
      settings:
        Name: ms-dotnettools.csharp
    
    # VS Code DotNet extension
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      id: vscode-ms-dotnettools.vscode-dotnet-runtime
      dependsOn:
        - Microsoft.VisualStudioCode
      directives:
        description: .NET Install Tool (PreRelease) extension
        allowPrerelease: true
        securityContext: current
      settings:
        Name: ms-dotnettools.vscode-dotnet-runtime

    # VS Code DotNet extension
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      id: ms-vscode-remote.remote-containers
      dependsOn:
        - Microsoft.VisualStudioCode
      directives:
        description: Dev Containers (PreRelease) extension
        allowPrerelease: true
        securityContext: current
      settings:
        Name: ms-vscode-remote.remote-containers

    # VS Code PowerShell extension
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      id: vscode-ms-powershell
      dependsOn:
        - Microsoft.VisualStudioCode
      directives:
        description: Install PowerShell  (PreRelease) extension
        allowPrerelease: true
        securityContext: current
      settings:
        Name: ms-vscode.powershell
    
    # VS Code Azure Docker tools
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      id: vscode-ms-azuretools.vscode-docker
      dependsOn:
        - Microsoft.VisualStudioCode
      directives:
        description: Install Docker  (PreRelease) extension
        allowPrerelease: true
        securityContext: current
      settings:
        Name: ms-azuretools.vscode-docker

    # VS Code Terraform extension
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      id: vscode-hashicorp.terraform
      dependsOn:
        - Microsoft.VisualStudioCode
      directives:
        description: Install HashiCorp Terraform (PreRelease) extension
        allowPrerelease: true
        securityContext: current
      settings:
        Name: hashicorp.terraform

    # VS Code Terraform extension
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      id: vscode-ms-azuretools.vscode-azureterraform
      dependsOn:
        - Microsoft.VisualStudioCode
      directives:
        description: Install Microsoft Terraform (PreRelease) extension
        allowPrerelease: true
        securityContext: current
      settings:
        Name: ms-azuretools.vscode-azureterraform

    # VS Code RedHat YML extension
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      id: redhat.vscode-yaml
      dependsOn:
        - Microsoft.VisualStudioCode
      directives:
        description: Install Red Hat YAML (PreRelease) extension
        allowPrerelease: true
        securityContext: current
      settings:
        Name: redhat.vscode-yaml

    # VS Code GitHub Copilot extension
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      id: GitHub.copilot
      dependsOn:
        - Microsoft.VisualStudioCode
      directives:
        description: Install GitHub Copilot (PreRelease) extension
        allowPrerelease: true
        securityContext: current
      settings:
        Name: GitHub.copilot

    # VS Code GitHub Copilot Chat extension
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      id: GitHub.copilot-chat
      dependsOn:
        - Microsoft.VisualStudioCode
      directives:
        description: Install GitHub Copilot Chat (PreRelease) extension
        allowPrerelease: true
        securityContext: current
      settings:
        Name: GitHub.copilot-chat

    # VS Code
    - resource: Microsoft.VSCode.Dsc/VSCodeExtension
      id: ms-azuretools.vscode-azure-github-copilot
      dependsOn:
        - Microsoft.VisualStudioCode
      directives:
        description: Install GitHub Copilot Chat (PreRelease) extension
        allowPrerelease: true
        securityContext: current
      settings:
        Name: ms-azuretools.vscode-azure-github-copilot
      
    # Java (open source)
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: ms-java-jdk
      directives:
        description: Install Microsoft Open JDK 21
        securityContext: current
      settings:
        id: Microsoft.OpenJDK.21
        source: winget

    # NDI Runtime
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: NDI.NDIRuntime
      directives:
        description: Install NDI.NDIRuntime
        securityContext: current
      settings:
        id: NDI.NDIRuntime
        source: winget

    # NodeJS
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: OpenJS.NodeJS
      directives:
        description: Install OpenJS.NodeJS (dependency for many VS Code extensions)
        securityContext: current
      settings:
        id: OpenJS.NodeJS
        source: winget

