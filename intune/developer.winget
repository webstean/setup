# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
############################################################################################################################
# This configuration will install the generic tools for Developers                                                         #
#                                                                                                                          #
# This will:                                                                                                               #
#     * Installs Visual Studio Codes, plus some essential extensions                                                       #
#     * Installs Various Tools                                                                                             #
#     * Installs Terraform                                                                                                 #
#     * Installs DotNet tools                                                                                              #
############################################################################################################################
properties:
  configurationVersion: 0.2.0
  resources:

  - resource: Microsoft.Windows.Developer/DeveloperMode
    directives:
      description: Enable Developer Mode
      # Requires elevation only for the set operation
      securityContext: elevated
      allowPrerelease: true
    settings:
      Ensure: Present

  - resource: PSDscResources/WindowsOptionalFeature
    directives:
      description: Install VirtualMachinePlatform
      securityContext: elevated
    settings:
      name: VirtualMachinePlatform
      ensure: Present

  ### Install WSL
#  - resource: xPSDesiredStateConfiguration/xWindowsFeature
#    directives:
#      description: Install WSL
#      securityContext: elevated
#    settings:
#      name: Microsoft-Windows-Subsystem-Linux
#      ensure: Present
    
  ### Configure Install Ubuntu
  - resource: xPSDesiredStateConfiguration/xScript
    id: variable.Developer
    directives:
      description: Install Ubuntu for WSL
    settings:
      GetScript: return $false
      TestScript: return $false
      SetScript: |
        $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
        wsl --install -d Ubuntu

  - resource: xPSDesiredStateConfiguration/xScript
    id: ubuntuwsl
    directives:
      description: Set a system-wide environment variable
    settings:
      GetScript: return $false
      TestScript: return $false
      SetScript: |
        [System.Environment]::SetEnvironmentVariable("DEVELOPER","Yes","Machine")

  - resource: xPSDesiredStateConfiguration/xScript
    id: Script.Set.Wallpaper
    description: Set Developer wallpaper
    settings:
      GetScript: return $false
      TestScript: return $false
      SetScript: |
        $wallpaper = "wallpaper.jpg"
        $regPath = "HKCU:\Control Panel\Desktop"
        $location = "$env:ALLUSERSPROFILE"
        $wallpaperlocation = "${location}\${wallpaper}"
        Copy-Item $wallpaper -Destination $wallpaperlocation -Force
        Set-ItemProperty -Path $regPath -Name wallpaper -Value $wallpaperlocation
        rundll32.exe user32.dll, UpdatePerUserSystemParameters
        Add-Type @"
          using System.Runtime.InteropServices;
          public class Wallpaper {
            [DllImport("user32.dll", SetLastError = true)]
            public static extern bool SystemParametersInfo(int uAction, int uParam, string lpvParam, int fuWinIni);
        }
        "@
        [Wallpaper]::SystemParametersInfo(0x0014, 0, $wallPaper, 3)


  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Microsoft.VisualStudioCode
    directives:
      description: Installing Microsoft.VisualStudioCode
      allowPrerelease: false
      securityContext: current
    settings:
      id: Microsoft.VisualStudioCode
      source: winget
  
  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Microsoft.VisualStudioCode.Insiders
    directives:
      description: Install Visual Studio Code Insiders
      securityContext: current
    settings:
      id: Microsoft.VisualStudioCode.Insiders
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Microsoft.DotNet.SDK.9
    directives:
      description: Installing Microsoft.DotNet.SDK.9
      allowPrerelease: true
      securityContext: current
    settings:
      id: Microsoft.DotNet.SDK.9
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Microsoft.DotNet.SDK.Preview
    directives:
      description: Installing Microsoft.DotNet.SDK.Preview
      allowPrerelease: true
      securityContext: elevated
    settings:
      id: Microsoft.DotNet.SDK.Preview
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: GitHub.GitHubDesktop
    directives:
      description: Installing GitHub.GitHubDesktop
      allowPrerelease: false
      securityContext: current
    settings:
      id: GitHub.GitHubDesktop
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Microsoft.Azure.AZCopy.10
    directives:
      description: Install Azure Az Copy Tool
      allowPrerelease: true
    settings:
      id: Microsoft.Azure.AZCopy.10
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Docker.DockerDesktop
    directives:
      description: Installing Docker.DockerDesktop %APPDATA%\Docker\settings.json
      allowPrerelease: false
      securityContext: current
    settings:
      id: Docker.DockerDesktop
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Microsoft.Azd
    directives:
      description: Installing Microsoft.Azd
      allowPrerelease: false
      securityContext: current
    settings:
      id: Microsoft.Azd
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Hashicorp.Terraform
    directives:
      description: Installing Hashicorp.Terraform
      allowPrerelease: false
      securityContext: current
    settings:
      id: Hashicorp.Terraform
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Graphviz.Graphviz
    directives:
      description: Installing Graphviz.Graphviz
      allowPrerelease: false
      securityContext: current
    settings:
      id: Graphviz.Graphviz
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Microsoft.AzureCLI
    directives:
      description: Installing Microsoft.AzureCLI
      allowPrerelease: false
      securityContext: current
    settings:
      id: Microsoft.AzureCLI
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Microsoft.Azure.FunctionsCoreTools
    directives:
      description: Installing Microsoft.Azure.FunctionsCoreTools
      allowPrerelease: false
      securityContext: current
    settings:
      id: Microsoft.Azure.FunctionsCoreTools
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Microsoft.Azure.StorageExplorer
    directives:
      description: Installing Microsoft.Azure.StorageExplorer
      allowPrerelease: false
      securityContext: current
    settings:
      id: Microsoft.Azure.StorageExplorer
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Microsoft.SQLServerManagementStudio
    directives:
      description: Installing Microsoft.SQLServerManagementStudio
      allowPrerelease: false
      securityContext: current
    settings:
      id: Microsoft.SQLServerManagementStudio
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Microsoft.WindowsTerminal
    directives:
      description: Installing Microsoft.WindowsTerminal
      allowPrerelease: false
      securityContext: current
    settings:
      id: Microsoft.WindowsTerminal
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Dapr.CLI
    directives:
      description: Installing Dapr.CLI
      allowPrerelease: false
      securityContext: current
    settings:
      id: Dapr.CLI
      source: winget

## Takes too long, not that useful
#  - resource: Microsoft.WinGet.DSC/WinGetPackage
#    id: WindowsADK
#    directives:
#      description: Installing Microsoft.WindowsADK
#      allowPrerelease: false
#      securityContext: current
#    settings:
#      id: Microsoft.WindowsADK
#      source: winget
 
#  - resource: Microsoft.WinGet.DSC/WinGetPackage
#    id: devproxy.devproxy
#    directives:
#      description: Installing devproxy.devproxy
#      allowPrerelease: false
#      securityContext: current
#    settings:
#      id: devproxy.devproxy
#      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: LIGHTNINGUK.ImgBurn
    directives:
      description: Installing LIGHTNINGUK.ImgBurn
      allowPrerelease: false
      securityContext: current
    settings:
      id: LIGHTNINGUK.ImgBurn
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: JanDeDobbeleer.OhMyPosh
    directives:
      description: Installing JanDeDobbeleer.OhMyPosh
      allowPrerelease: false
      securityContext: current
    settings:
      id: JanDeDobbeleer.OhMyPosh
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Starship.Starship
    directives:
      description: Installing Starship.Starship
      allowPrerelease: false
      securityContext: current
    settings:
      id: Starship.Starship
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: jqlang.jq
    directives:
      description: Installing jqlang.jq
      allowPrerelease: false
      securityContext: current
    settings:
      id: jqlang.jq
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: RaspberryPiFoundation.RaspberryPiImager
    directives:
      description: Installing RaspberryPiFoundation.RaspberryPiImager
      allowPrerelease: false
      securityContext: current
    settings:
      id: RaspberryPiFoundation.RaspberryPiImager
      source: winget

#  - resource: Microsoft.Windows.Settings/WindowsSettingsMicrosoft.Windows.Developer/EnableDarkMode
#    id: DarkModeEnabled
#    directives:
#      description: Enable dark mode
#      allowPrerelease: true
#      securityContext: current
#    settings:
#      Ensure: Present
#      # Use caution when setting `RestartExplorer: true` as this will force explorer to close.
#      RestartExplorer: true # Required to apply changes

  - resource: Microsoft.Windows.Settings/WindowsSettings
    id: WindowsSettings1
    directives:
      description: Modify Windows settings
      allowPrerelease: true
    settings:
        AppColorMode: Dark
        DeveloperMode: true
        SystemColorMode: Dark
        TaskbarAlignment: Center

  - resource: Microsoft.Windows.Developer/WindowsExplorer
    id: WindowsExplorerSettings1
    directives:
      description: Modify Windows Explorer settings
      allowPrerelease: true
    settings:
      FileExtensions: Show # [KeepCurrentValue, Hide]
      HiddenFiles: Show # [KeepCurrentValue, Hide]
      ItemCheckBoxes: Show # [KeepCurrentValue, Hide]
      RestartExplorer: False # Use caution when setting `RestartExplorer: true` as this will force explorer to close. Required for all WindowsExplorer settings.

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: Microsoft.Edit
    directives:
      description: Modify Windows Explorer settings
      allowPrerelease: true
    settings:
      id: Microsoft.Edit
      source: winget

#  - resource: Microsoft.Windows.Developer/ShowSecondsInClock
#    directives:
#      description: Show seconds in clock
#      allowPrerelease: true
#    settings:
#      Ensure: Present
#      ShowSeconds: True

  - resource: Microsoft.VSCode.Dsc/VSCodeExtension
    id: vscode-esbenp.prettier-vscode
    directives:
      description: Install Prettier for code formatting
      allowPrerelease: true
    settings:
      Name: esbenp.prettier-vscode

#  - resource: xPSDesiredStateConfiguration/xWindowsFeature  ## only works on Servers
#    id: WindowsSandbox
#    directives:
#      description: Ensure Windows Sandbox is enabled
#      allowPrerelease: true
#    settings:
#      Name: Containers-DisposableClientVM
#      Ensure: Present

#  - resource: Microsoft.WindowsSandbox.DSC/WindowsSandbox
#    id: WindowsSandboxConfig
#    dependsOn:
#      - WindowsSandbox
#    directives:
#      description: Create Windows Sandbox with Winget installed
#      allowPrerelease: true
#      securityContext: current
#    settings:
#      Ensure: Present
#      HostFolder: C:\Sandbox
#      SandboxFolder: C:\Sandbox
#      LogonCommand: >
#          cmd /c start powershell -NoExit -Command "$progressPreference = 'silentlyContinue';
#          Write-Host 'Setting execution policy to remote signed...' `n;
#          Set-ExecutionPolicy RemoteSigned -Force;
#          Write-Host "Installing WinGet PowerShell module from PSGallery...";
#          Install-PackageProvider -Name NuGet -Force | Out-Null;
#          Install-Module -Name Microsoft.WinGet.Client -Force -Repository PSGallery | Out-Null;
#          Write-Host "Using Repair-WinGetPackageManager cmdlet to bootstrap WinGet...";
#          Repair-WinGetPackageManager;
#          Write-Host "Done.";  

#  - resource: Microsoft.WinGet.DSC/WinGetPackage
#    id: Microsoft.PowerToys
#    directives:
#      description: Install PowerToys
#      securityContext: current
#    settings:
#      id: Microsoft.PowerToys
#      source: winget

#  - resource: PowerToysConfigure
#    id: Microsoft.PowerToys.Configure
#    dependson:
#      - Microsoft.PowerToys
#    description: Configure PowerToys
#    settings:
#      ShortcutGuide:
#        Enabled: false
#        OverlayOpacity: 1
#      FancyZones:
#        Enabled: true
#        FancyzonesEditorHotkey: "Shift+Ctrl+Alt+F"

  - resource: GitDsc/GitClone
    id: github.com/lscph1929/lscph-azterraform.git
    directives:
      description: Clone the lscph-azterraform repository
      allowPrerelease: true
      securityContext: current
    settings:
      HttpsUrl: https://github.com/lscph1929/lscph-azterraform.git
      RootDirectory: "C:/WorkSpaces"

  - resource: GitDsc/GitClone
    id: github.com/stomble/stm-cloud-scaffold.git
    directives:
      description: Clone the stm-cloud-scaffold
      allowPrerelease: true
      securityContext: current
    settings:
      HttpsUrl: https://github.com/stomble/stm-cloud-scaffold.git
      RootDirectory: "C:/WorkSpaces"

  - resource: GitDsc/GitClone
    id: github.com/lscph1929/scripts.git
    directives:
      description: Clone the scripts repository
      allowPrerelease: true
      securityContext: current
    settings:
      HttpsUrl: https://github.com/lscph1929/scripts.git
      RootDirectory: "C:/WorkSpaces"

  - resource: GitDsc/GitClone
    id: github.com/webstean/setup
    directives:
      description: Clone the scripts repository
      allowPrerelease: true
      securityContext: current
    settings:
      HttpsUrl: https://github.com/webstean/setup
      RootDirectory: "C:/WorkSpaces"

#  - resource: Microsoft.VSCode.Dsc/VSCodeExtension
#    directives:
#      description: Install Git Graph for visual Git history
#      allowPrerelease: true
#    settings:
#      Name: mhutchie.git-graph

  # .NET Development Extensions
  - resource: Microsoft.VSCode.Dsc/VSCodeExtension
    id: vscode-ms-dotnettools.csharp
    directives:
      description: Install C# extension
      allowPrerelease: true
      securityContext: current
    settings:
      Name: ms-dotnettools.csharp
    
  - resource: Microsoft.VSCode.Dsc/VSCodeExtension
    id: vscode-ms-dotnettools.vscode-dotnet-runtime
    directives:
      description: Install .NET RunTime Vscode Extension
      allowPrerelease: true
      securityContext: current
    settings:
      Name: ms-dotnettools.vscode-dotnet-runtime
    
  # PowerShell Development
  - resource: Microsoft.VSCode.Dsc/VSCodeExtension
    id: vscode-ms-powershell
    directives:
      description: Install PowerShell extension
      allowPrerelease: true
      securityContext: current
    settings:
      Name: ms-vscode.powershell
    
  # Docker and Containerization
  - resource: Microsoft.VSCode.Dsc/VSCodeExtension
    id: vscode-ms-azuretools.vscode-docker
    directives:
      description: Install Docker extension
      allowPrerelease: true
      securityContext: current
    settings:
      Name: ms-azuretools.vscode-docker

  - resource: Microsoft.VSCode.Dsc/VSCodeExtension
    id: vscode-hashicorp.terraform
    directives:
      description: Install HashiCorp Terraform extension
      allowPrerelease: true
      securityContext: current
    settings:
      Name: hashicorp.terraform

  - resource: Microsoft.VSCode.Dsc/VSCodeExtension
    id: vscode-MS-vsliveshare.vsliveshare
    directives:
      description: Install Microsoft LiveShare extension
      allowPrerelease: true
      securityContext: current
    settings:
      Name: MS-vsliveshare.vsliveshare

  - resource: Microsoft.VSCode.Dsc/VSCodeExtension
    id: vscode-ms-azuretools.vscode-azureterraform
    directives:
      description: Install Microsoft Terraform extension
      allowPrerelease: true
      securityContext: current
    settings:
      Name: ms-azuretools.vscode-azureterraform

  - resource: Microsoft.VSCode.Dsc/VSCodeExtension
    id: redhat.vscode-yaml
    directives:
      description: Install Red Hat YAML extension
      allowPrerelease: true
      securityContext: current
    settings:
      Name: redhat.vscode-yaml

  - resource: Microsoft.VSCode.Dsc/VSCodeExtension
    id: GitHub.copilot
    directives:
      description: Install GitHub Copilot extension
      allowPrerelease: true
      securityContext: current
    settings:
      Name: GitHub.copilot

  - resource: Microsoft.VSCode.Dsc/VSCodeExtension
    id: GitHub.copilot-chat
    directives:
      description: Install GitHub Copilot Chat extension
      allowPrerelease: true
      securityContext: current
    settings:
      Name: GitHub.copilot-chat

  - resource: Microsoft.VSCode.Dsc/VSCodeExtension
    id: ms-azuretools.vscode-azure-github-copilot
    directives:
      description: Install GitHub Copilot Chat extension
      allowPrerelease: true
      securityContext: current
    settings:
      Name: ms-azuretools.vscode-azure-github-copilot
      
  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: ms-java-jdk
    directives:
      description: Install Microsoft Open JDK 21
      securityContext: current
    settings:
      id: Microsoft.OpenJDK.21
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: NDI.NDIRuntime
    directives:
      description: Install NDI.NDIRuntime
      securityContext: current
    settings:
      id: NDI.NDIRuntime
      source: winget

  - resource: Microsoft.WinGet.DSC/WinGetPackage
    id: OpenJS.NodeJS
    directives:
      description: Install OpenJS.NodeJS
      securityContext: current
    settings:
      id: OpenJS.NodeJS
      source: winget


